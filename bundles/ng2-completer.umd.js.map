{"version":3,"file":"ng2-completer.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../node_modules/rxjs/node_modules/tslib/tslib.es6.js","../../../node_modules/rxjs/src/internal/util/isFunction.ts","../../../node_modules/rxjs/src/internal/config.ts","../../../node_modules/rxjs/src/internal/util/hostReportError.ts","../../../node_modules/rxjs/src/internal/Observer.ts","../../../node_modules/rxjs/src/internal/util/isArray.ts","../../../node_modules/rxjs/src/internal/util/isObject.ts","../../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../../../node_modules/rxjs/src/internal/Subscription.ts","../../../node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","../../../node_modules/rxjs/src/internal/Subscriber.ts","../../../node_modules/rxjs/src/internal/util/canReportError.ts","../../../node_modules/rxjs/src/internal/util/toSubscriber.ts","../../../node_modules/rxjs/src/internal/symbol/observable.ts","../../../node_modules/rxjs/src/internal/util/identity.ts","../../../node_modules/rxjs/src/internal/util/pipe.ts","../../../node_modules/rxjs/src/internal/Observable.ts","../../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../../node_modules/rxjs/src/internal/SubjectSubscription.ts","../../../node_modules/rxjs/src/internal/Subject.ts","../../../node_modules/rxjs/src/internal/scheduler/Action.ts","../../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","../../../node_modules/rxjs/src/internal/Scheduler.ts","../../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","../../../node_modules/rxjs/src/internal/util/isScheduler.ts","../../../node_modules/rxjs/src/internal/scheduler/async.ts","../../../node_modules/rxjs/src/internal/util/isNumeric.ts","../../../node_modules/rxjs/src/internal/observable/timer.ts","../../../src/globals.ts","../../../src/services/completer-base-data.ts","../../../src/services/local-data.ts","../../../src/services/remote-data.ts","../../../src/services/local-data-factory.ts","../../../src/services/remote-data-factory.ts","../../../src/services/completer-service.ts","../../../src/directives/ctr-completer.ts","../../../src/directives/ctr-dropdown.ts","../../../src/directives/ctr-input.ts","../../../src/directives/ctr-list.ts","../../../src/directives/ctr-row.ts","../../../src/components/completer-list-item-cmp.ts","../../../src/components/completer-cmp.ts","../../../src/modules/ng2-completer.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export const isArray = (() => Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number'))();\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (this as any)._ctorUnsubscribe = true;\n      (this as any)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = (this as any);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      // It's only possible to null _unsubscribe - to release the reference to\n      // any teardown function passed in the constructor - if the property was\n      // actually assigned in the constructor, as there are some classes that\n      // are derived from Subscriber (which derives from Subscription) that\n      // implement an _unsubscribe method as a mechanism for obtaining\n      // unsubscription notifications and some of those subscribers are\n      // recycled. Also, in some of those subscribers, _unsubscribe switches\n      // from a prototype method to an instance property - see notifyNext in\n      // RetryWhenSubscriber.\n      if (_ctorUnsubscribe) {\n        (this as any)._unsubscribe = undefined;\n      }\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!teardown) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated renamed. Use {@link asyncScheduler}\n */\nexport const async = asyncScheduler;","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","\r\nexport const MAX_CHARS = 524288;  // the default max length per the html maxlength attribute\r\nexport const MIN_SEARCH_LENGTH = 3;\r\nexport const PAUSE = 10;\r\nexport const TEXT_SEARCHING = \"Searching...\";\r\nexport const TEXT_NO_RESULTS = \"No results found\";\r\nexport const CLEAR_TIMEOUT = 50;\r\n\r\nexport function isNil(value: any) {\r\n    return typeof value === \"undefined\" || value === null;\r\n}\r\n","import { Subject } from \"rxjs\";\r\n\r\nimport { CompleterItem } from \"../components/completer-item\";\r\nimport { CompleterData } from \"./completer-data\";\r\nimport { isNil } from \"../globals\";\r\n\r\nexport abstract class CompleterBaseData extends Subject<CompleterItem[] | null> implements CompleterData {\r\n\r\n    protected _searchFields: string | null = null;\r\n    protected _titleField: string | null = null;\r\n    protected _descriptionField: string | undefined = undefined;\r\n    protected _imageField: string | undefined = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public abstract search(term: string): void;\r\n\r\n    public cancel() {\r\n        return;\r\n    }\r\n\r\n    public searchFields(searchFields: string | null) {\r\n        this._searchFields = searchFields;\r\n        return this;\r\n    }\r\n\r\n    public titleField(titleField: string | null) {\r\n        this._titleField = titleField;\r\n        return this;\r\n    }\r\n\r\n    public descriptionField(descriptionField: string) {\r\n        this._descriptionField = descriptionField;\r\n        return this;\r\n    }\r\n\r\n    public imageField(imageField: string) {\r\n        this._imageField = imageField;\r\n        return this;\r\n    }\r\n\r\n    public convertToItem(data: any) {\r\n        let image: string | null = null;\r\n        let formattedText: string;\r\n        let formattedDesc: string | null = null;\r\n\r\n        if (this._titleField) {\r\n            formattedText = this.extractTitle(data);\r\n        } else {\r\n            formattedText = data;\r\n        }\r\n\r\n        if (typeof formattedText !== \"string\") {\r\n            formattedText = JSON.stringify(formattedText);\r\n        }\r\n\r\n        if (this._descriptionField) {\r\n            formattedDesc = this.extractValue(data, this._descriptionField);\r\n        }\r\n\r\n        if (this._imageField) {\r\n            image = this.extractValue(data, this._imageField);\r\n        }\r\n\r\n        if (isNil(formattedText)) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            description: formattedDesc,\r\n            image,\r\n            originalObject: data,\r\n            title: formattedText\r\n        } as CompleterItem;\r\n\r\n    }\r\n\r\n    protected extractMatches(data: any[], term: string) {\r\n        let matches: any[] = [];\r\n        const searchFields = this._searchFields ? this._searchFields.split(\",\") : null;\r\n        if (this._searchFields !== null && this._searchFields !== undefined && term !== \"\") {\r\n            matches = data.filter((item) => {\r\n                const values: any[] = searchFields ? this.extractBySearchFields(searchFields, item) : [item];\r\n                return values.some((value) => value\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .indexOf(term.toString().toLowerCase()) >= 0\r\n                );\r\n            });\r\n        } else {\r\n            matches = data;\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    protected extractTitle(item: any) {\r\n        // split title fields and run extractValue for each and join with ' '\r\n        if (!this._titleField) {\r\n            return \"\";\r\n        }\r\n\r\n        return this._titleField.split(\",\")\r\n            .map((field) => {\r\n                return this.extractValue(item, field);\r\n            })\r\n            .reduce((acc, titlePart) => acc ? `${acc} ${titlePart}` : titlePart);\r\n    }\r\n\r\n    protected extractValue(obj: any, key: string | null) {\r\n        let keys: string[];\r\n        let result: any;\r\n        if (key) {\r\n            keys = key.split(\".\");\r\n            result = obj;\r\n            for (key of keys) {\r\n                if (result) {\r\n                    result = result[key];\r\n                }\r\n            }\r\n        } else {\r\n            result = obj;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected processResults(matches: string[]): CompleterItem[] {\r\n        let i: number;\r\n        const results: CompleterItem[] = [];\r\n\r\n        if (matches && matches.length > 0) {\r\n            for (i = 0; i < matches.length; i++) {\r\n                const item = this.convertToItem(matches[i]);\r\n                if (item) {\r\n                    results.push(item);\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    private extractBySearchFields(searchFields: string[], item: any) {\r\n        return searchFields\r\n            .map((searchField) => this.extractValue(item, searchField)).filter((value) => !!value);\r\n    }\r\n}\r\n","import { EventEmitter } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\nimport { CompleterBaseData } from \"./completer-base-data\";\r\nimport { CompleterItem } from \"../components/completer-item\";\r\n\r\nexport class LocalData extends CompleterBaseData {\r\n\r\n    public dataSourceChange: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    protected _data: any[] = [];\r\n    protected savedTerm: string | null = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public data(data: any[] | Observable<any[]>) {\r\n        if (data instanceof Observable) {\r\n            const data$ = data as Observable<any[]>;\r\n            data$\r\n                .pipe(catchError(() => []))\r\n                .subscribe((res) => {\r\n                    this._data = res;\r\n                    if (this.savedTerm) {\r\n                        this.search(this.savedTerm);\r\n                    }\r\n                    this.dataSourceChange.emit();\r\n                });\r\n        } else {\r\n            this._data = data;\r\n        }\r\n\r\n        this.dataSourceChange.emit();\r\n\r\n        return this;\r\n    }\r\n\r\n    public search(term: string): void {\r\n        if (!this._data) {\r\n            this.savedTerm = term;\r\n        } else {\r\n            this.savedTerm = null;\r\n            const matches: any[] = this.extractMatches(this._data, term);\r\n            this.next(this.processResults(matches));\r\n        }\r\n    }\r\n\r\n    public convertToItem(data: any): CompleterItem | null {\r\n        return super.convertToItem(data);\r\n    }\r\n}\r\n","import { EventEmitter } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\n\r\nimport { CompleterBaseData } from \"./completer-base-data\";\r\nimport { CompleterItem } from \"../components/completer-item\";\r\n\r\nexport class RemoteData extends CompleterBaseData {\r\n    public dataSourceChange: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    private _remoteUrl: string | null = null;\r\n    private remoteSearch: Subscription | null = null;\r\n    private _urlFormater: ((term: string) => string) | null = null;\r\n    private _dataField: string | null = null;\r\n    private _requestOptions: any;\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    public remoteUrl(remoteUrl: string | null) {\r\n        this._remoteUrl = remoteUrl;\r\n        this.dataSourceChange.emit();\r\n\r\n        return this;\r\n    }\r\n\r\n    public urlFormater(urlFormater: (term: string) => string) {\r\n        this._urlFormater = urlFormater;\r\n    }\r\n\r\n    public dataField(dataField: string) {\r\n        this._dataField = dataField;\r\n    }\r\n\r\n    public requestOptions(requestOptions: any) {\r\n        this._requestOptions = requestOptions;\r\n    }\r\n\r\n    public search(term: string): void {\r\n        this.cancel();\r\n        // let params = {};\r\n        let url = \"\";\r\n        if (this._urlFormater) {\r\n            url = this._urlFormater(term);\r\n        } else {\r\n            url = this._remoteUrl + encodeURIComponent(term);\r\n        }\r\n\r\n        this.remoteSearch = this.http\r\n            .get(url, Object.assign({}, this._requestOptions))\r\n            .pipe(\r\n                map((data: any) => {\r\n                    const matches = this.extractValue(data, this._dataField);\r\n                    // return this.extractMatches(matches, term);\r\n                    return matches;\r\n                }),\r\n                catchError(() => [])\r\n            )\r\n            .subscribe((matches: any[]) => {\r\n                const results = this.processResults(matches);\r\n                this.next(results);\r\n            });\r\n    }\r\n\r\n    public cancel() {\r\n        if (this.remoteSearch) {\r\n            this.remoteSearch.unsubscribe();\r\n        }\r\n    }\r\n\r\n    public convertToItem(data: any): CompleterItem | null {\r\n        return super.convertToItem(data);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { LocalData } from \"./local-data\";\r\n\r\n@Injectable()\r\nexport class LocalDataFactory {\r\n    public create() {\r\n        return new LocalData();\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { RemoteData } from \"./remote-data\";\r\n\r\n@Injectable()\r\nexport class RemoteDataFactory {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public create() {\r\n        return new RemoteData(this.http);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { LocalData } from \"./local-data\";\r\nimport { RemoteData } from \"./remote-data\";\r\nimport { LocalDataFactory } from \"./local-data-factory\";\r\nimport { RemoteDataFactory } from \"./remote-data-factory\";\r\n\r\n@Injectable()\r\nexport class CompleterService {\r\n    constructor(\r\n        private localDataFactory: LocalDataFactory, // Using any instead of () => LocalData because of AoT errors\r\n        private remoteDataFactory: RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\r\n    ) { }\r\n\r\n    public local(\r\n        data: any[] | Observable<any>,\r\n        searchFields: string | null = \"\",\r\n        titleField: string | null = \"\"\r\n    ): LocalData {\r\n\r\n        const localData = this.localDataFactory.create();\r\n        return localData\r\n            .data(data)\r\n            .searchFields(searchFields)\r\n            .titleField(titleField);\r\n    }\r\n\r\n    public remote(url: string | null, searchFields: string | null = \"\", titleField: string | null = \"\"): RemoteData {\r\n\r\n        const remoteData = this.remoteDataFactory.create();\r\n        return remoteData\r\n            .remoteUrl(url)\r\n            .searchFields(searchFields)\r\n            .titleField(titleField);\r\n    }\r\n}\r\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\r\n\r\nimport { CompleterItem } from \"../components/completer-item\";\r\n\r\nexport interface CompleterList {\r\n    search(term: string): void;\r\n    open(): void;\r\n    isOpen(open: boolean): void;\r\n    clear(): void;\r\n}\r\n\r\nexport interface CompleterDropdown {\r\n    clear(): void;\r\n    selectCurrent(): void;\r\n    nextRow(): void;\r\n    prevRow(): void;\r\n    highlightRow(index: number | null): void;\r\n}\r\n\r\n@Directive({\r\n    selector: \"[ctrCompleter]\",\r\n})\r\nexport class CtrCompleter {\r\n    @Output() public selected = new EventEmitter<CompleterItem | null>();\r\n    @Output() public highlighted = new EventEmitter<CompleterItem | null>();\r\n    @Output() public opened = new EventEmitter<boolean>();\r\n    @Output() public dataSourceChange = new EventEmitter<void>();\r\n\r\n    private list: CompleterList | null = null;\r\n    private dropdown: CompleterDropdown | null = null;\r\n    private _hasHighlighted = false;\r\n    private _hasSelected = false;\r\n    private _cancelBlur = false;\r\n    private _isOpen = false;\r\n    private _autoHighlightIndex: number | null = null;\r\n\r\n    public registerList(list: CompleterList) {\r\n        this.list = list;\r\n    }\r\n\r\n    public registerDropdown(dropdown: CompleterDropdown | null) {\r\n        this.dropdown = dropdown;\r\n    }\r\n\r\n    public onHighlighted(item: CompleterItem | null) {\r\n        this.highlighted.emit(item);\r\n        this._hasHighlighted = !!item;\r\n    }\r\n\r\n    public onSelected(item: CompleterItem | null, clearList = true) {\r\n        this.selected.emit(item);\r\n        if (item) {\r\n            this._hasSelected = true;\r\n        }\r\n        if (clearList) {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    public onDataSourceChange() {\r\n        if (this.hasSelected) {\r\n            this.selected.emit(null);\r\n            this._hasSelected = false;\r\n        }\r\n        this.dataSourceChange.emit();\r\n    }\r\n\r\n    public search(term: string) {\r\n        if (this._hasSelected) {\r\n            this.selected.emit(null);\r\n            this._hasSelected = false;\r\n        }\r\n        if (this.list) {\r\n            this.list.search(term);\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        this._hasHighlighted = false;\r\n        this.isOpen = false;\r\n\r\n        if (this.dropdown) {\r\n            this.dropdown.clear();\r\n        }\r\n\r\n        if (this.list) {\r\n            this.list.clear();\r\n        }\r\n    }\r\n\r\n    public selectCurrent() {\r\n        if (this.dropdown) {\r\n            this.dropdown.selectCurrent();\r\n        }\r\n    }\r\n\r\n    public nextRow() {\r\n        if (this.dropdown) {\r\n            this.dropdown.nextRow();\r\n        }\r\n    }\r\n\r\n    public prevRow() {\r\n        if (this.dropdown) {\r\n            this.dropdown.prevRow();\r\n        }\r\n    }\r\n\r\n    public hasHighlighted() {\r\n        return this._hasHighlighted;\r\n    }\r\n\r\n    public cancelBlur(cancel: boolean) {\r\n        this._cancelBlur = cancel;\r\n    }\r\n\r\n    public isCancelBlur() {\r\n        return this._cancelBlur;\r\n    }\r\n\r\n    public open() {\r\n        if (!this._isOpen && !!this.list) {\r\n            this.isOpen = true;\r\n            this.list.open();\r\n        }\r\n    }\r\n\r\n    public get isOpen() {\r\n        return this._isOpen;\r\n    }\r\n\r\n    public set isOpen(open: boolean) {\r\n        this._isOpen = open;\r\n        this.opened.emit(this._isOpen);\r\n        if (this.list) {\r\n            this.list.isOpen(open);\r\n        }\r\n    }\r\n\r\n    public get autoHighlightIndex() {\r\n        return this._autoHighlightIndex;\r\n    }\r\n\r\n    public set autoHighlightIndex(index: number | null) {\r\n        this._autoHighlightIndex = index;\r\n        if (this.dropdown) {\r\n            this.dropdown.highlightRow(this._autoHighlightIndex);\r\n        }\r\n    }\r\n\r\n    public get hasSelected() {\r\n        return this._hasSelected;\r\n    }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Host, HostListener, OnDestroy, NgZone } from \"@angular/core\";\r\n\r\nimport { CompleterItem } from \"../components/completer-item\";\r\nimport { CtrCompleter, CompleterDropdown } from \"./ctr-completer\";\r\nimport { isNil } from \"../globals\";\r\n\r\nexport interface CtrRowElement {\r\n    setHighlighted(selected: boolean): void;\r\n    getNativeElement(): any;\r\n    getDataItem(): CompleterItem | null;\r\n}\r\n\r\nexport class CtrRowItem {\r\n    constructor(public row: CtrRowElement, public index: number) { }\r\n}\r\n\r\n@Directive({\r\n    selector: \"[ctrDropdown]\",\r\n})\r\nexport class CtrDropdown implements CompleterDropdown, OnDestroy, AfterViewInit {\r\n\r\n    private rows: CtrRowItem[] = [];\r\n    private currHighlighted: CtrRowItem | undefined;\r\n    private isScrollOn: boolean = false;\r\n    private _rowMouseDown: boolean = false;\r\n\r\n    constructor( @Host() private completer: CtrCompleter, private el: ElementRef, private zone: NgZone) {\r\n        this.completer.registerDropdown(this);\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.completer.registerDropdown(null);\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        const css = getComputedStyle(this.el.nativeElement);\r\n        const autoHighlightIndex = this.completer.autoHighlightIndex;\r\n\r\n        this.isScrollOn = !!css.maxHeight && css.overflowY === \"auto\";\r\n        if (autoHighlightIndex) {\r\n            this.zone.run(\r\n                () => {\r\n                    this.highlightRow(autoHighlightIndex);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    @HostListener(\"mousedown\", [\"$event\"]) public onMouseDown(event: any) {\r\n        // Support for canceling blur on IE (issue #158)\r\n        if (!this._rowMouseDown) {\r\n            this.completer.cancelBlur(true);\r\n            this.zone.run(\r\n                () => {\r\n                    this.completer.cancelBlur(false);\r\n                }\r\n            );\r\n        } else {\r\n            this._rowMouseDown = false;\r\n        }\r\n    }\r\n\r\n    public registerRow(row: CtrRowItem) {\r\n        const arrIndex = this.rows.findIndex(_row => _row.index === row.index);\r\n        if (arrIndex >= 0) {\r\n            this.rows[arrIndex] = row;\r\n        } else {\r\n            this.rows.push(row);\r\n        }\r\n    }\r\n\r\n    public unregisterRow(rowIndex: number) {\r\n        const arrIndex = this.rows.findIndex(_row => _row.index === rowIndex);\r\n        this.rows.splice(arrIndex, 1);\r\n        if (this.currHighlighted && rowIndex === this.currHighlighted.index) {\r\n            this.highlightRow(null);\r\n        }\r\n    }\r\n\r\n    public highlightRow(index: number | null) {\r\n        const highlighted = this.rows.find(row => row.index === index);\r\n\r\n        if (isNil(index) || index! < 0) {\r\n            if (this.currHighlighted) {\r\n                this.currHighlighted.row.setHighlighted(false);\r\n            }\r\n            this.currHighlighted = undefined;\r\n            this.completer.onHighlighted(null);\r\n            return;\r\n        }\r\n\r\n        if (!highlighted) {\r\n            return;\r\n        }\r\n\r\n        if (this.currHighlighted) {\r\n            this.currHighlighted.row.setHighlighted(false);\r\n        }\r\n\r\n        this.currHighlighted = highlighted;\r\n        this.currHighlighted.row.setHighlighted(true);\r\n        this.completer.onHighlighted(this.currHighlighted.row.getDataItem());\r\n\r\n        if (this.isScrollOn && this.currHighlighted) {\r\n            const rowTop = this.dropdownRowTop();\r\n\r\n            if (!rowTop) {\r\n                return;\r\n            }\r\n\r\n            if (rowTop < 0) {\r\n                this.dropdownScrollTopTo(rowTop - 1);\r\n            } else {\r\n                const row = this.currHighlighted.row.getNativeElement();\r\n                if (this.dropdownHeight() < row.getBoundingClientRect().bottom) {\r\n                    this.dropdownScrollTopTo(this.dropdownRowOffsetHeight(row));\r\n                    if (this.el.nativeElement.getBoundingClientRect().bottom - this.dropdownRowOffsetHeight(row) < row.getBoundingClientRect().top) {\r\n                        this.dropdownScrollTopTo(row.getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top + parseInt(getComputedStyle(this.el.nativeElement).paddingTop as string, 10)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        this.rows = [];\r\n    }\r\n\r\n    public onSelected(item: CompleterItem | null) {\r\n        this.completer.onSelected(item);\r\n    }\r\n\r\n    public rowMouseDown() {\r\n        this._rowMouseDown = true;\r\n    }\r\n\r\n    public selectCurrent() {\r\n        if (!!this.currHighlighted && !!this.currHighlighted.row) {\r\n            this.onSelected(this.currHighlighted.row.getDataItem());\r\n        } else if (this.rows.length > 0) {\r\n            this.onSelected(this.rows[0].row.getDataItem());\r\n        }\r\n\r\n    }\r\n\r\n    public nextRow() {\r\n        let nextRowIndex = 0;\r\n\r\n        if (this.currHighlighted) {\r\n            nextRowIndex = this.currHighlighted.index + 1;\r\n        }\r\n\r\n        this.highlightRow(nextRowIndex);\r\n    }\r\n\r\n    public prevRow() {\r\n        let nextRowIndex = -1;\r\n\r\n        if (this.currHighlighted) {\r\n            nextRowIndex = this.currHighlighted.index - 1;\r\n        }\r\n\r\n        this.highlightRow(nextRowIndex);\r\n    }\r\n\r\n    private dropdownScrollTopTo(offset: any) {\r\n        this.el.nativeElement.scrollTop = this.el.nativeElement.scrollTop + offset;\r\n    }\r\n\r\n    private dropdownRowTop() {\r\n        if (!this.currHighlighted) {\r\n            return;\r\n        }\r\n\r\n        return this.currHighlighted.row.getNativeElement().getBoundingClientRect().top -\r\n            (this.el.nativeElement.getBoundingClientRect().top +\r\n                parseInt(getComputedStyle(this.el.nativeElement).paddingTop as string, 10));\r\n    }\r\n\r\n    private dropdownHeight() {\r\n        return this.el.nativeElement.getBoundingClientRect().top +\r\n            parseInt(getComputedStyle(this.el.nativeElement).maxHeight as string, 10);\r\n    }\r\n\r\n    private dropdownRowOffsetHeight(row: any) {\r\n        const css = getComputedStyle(row.parentElement);\r\n        return row.parentElement.offsetHeight +\r\n            parseInt(css.marginTop as string, 10) + parseInt(css.marginBottom as string, 10);\r\n    }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Host, HostListener, Input, Output } from \"@angular/core\";\r\nimport { NgModel } from \"@angular/forms\";\r\nimport { Subscription, timer } from \"rxjs\";\r\nimport { take } from \"rxjs/operators\";\r\n\r\nimport { CompleterItem } from \"../components/completer-item\";\r\nimport { CtrCompleter } from \"./ctr-completer\";\r\nimport { isNil } from \"../globals\";\r\n\r\n\r\n// keyboard events\r\nconst KEY_DW = 40;\r\nconst KEY_RT = 39;\r\nconst KEY_UP = 38;\r\nconst KEY_LF = 37;\r\nconst KEY_ES = 27;\r\nconst KEY_EN = 13;\r\nconst KEY_TAB = 9;\r\nconst KEY_BK = 8;\r\nconst KEY_SH = 16;\r\nconst KEY_CL = 20;\r\nconst KEY_F1 = 112;\r\nconst KEY_F12 = 123;\r\n\r\n@Directive({\r\n    selector: \"[ctrInput]\",\r\n})\r\nexport class CtrInput {\r\n    @Input(\"clearSelected\") public clearSelected = false;\r\n    @Input(\"clearUnselected\") public clearUnselected = false;\r\n    @Input(\"overrideSuggested\") public overrideSuggested = false;\r\n    @Input(\"fillHighlighted\") public fillHighlighted = true;\r\n    @Input(\"openOnFocus\") public openOnFocus = false;\r\n    @Input(\"openOnClick\") public openOnClick = false;\r\n    @Input(\"selectOnClick\") public selectOnClick = false;\r\n    @Input(\"selectOnFocus\") public selectOnFocus = false;\r\n\r\n    @Output() public ngModelChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    private _searchStr = \"\";\r\n    private _displayStr = \"\";\r\n    private blurTimer: Subscription | null = null;\r\n\r\n    constructor( @Host() private completer: CtrCompleter, private ngModel: NgModel, private el: ElementRef) {\r\n        this.completer.selected.subscribe((item: CompleterItem) => {\r\n            if (!item) {\r\n                return;\r\n            }\r\n            if (this.clearSelected) {\r\n                this.searchStr = \"\";\r\n            } else {\r\n                this.searchStr = item.title;\r\n            }\r\n            this.ngModelChange.emit(this.searchStr);\r\n        });\r\n\r\n        this.completer.highlighted.subscribe((item: CompleterItem) => {\r\n            if (this.fillHighlighted) {\r\n                if (item) {\r\n                    this._displayStr = item.title;\r\n                    this.ngModelChange.emit(item.title);\r\n                } else {\r\n                    this._displayStr = this.searchStr;\r\n                    this.ngModelChange.emit(this.searchStr);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.completer.dataSourceChange.subscribe(() => {\r\n            this.completer.search(this.searchStr);\r\n        });\r\n\r\n        if (this.ngModel.valueChanges) {\r\n            this.ngModel.valueChanges.subscribe((value: any) => {\r\n                if (!isNil(value) && this._displayStr !== value) {\r\n                    if (this.searchStr !== value) {\r\n                        this.completer.search(value);\r\n                    }\r\n                    this.searchStr = value;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    @HostListener(\"keyup\", [\"$event\"])\r\n    public keyupHandler(event: any) {\r\n        if (event.keyCode === KEY_LF || event.keyCode === KEY_RT || event.keyCode === KEY_TAB) {\r\n            // do nothing\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode === KEY_UP || event.keyCode === KEY_EN) {\r\n            event.preventDefault();\r\n        } else if (event.keyCode === KEY_DW) {\r\n            event.preventDefault();\r\n            this.completer.search(this.searchStr);\r\n        } else if (event.keyCode === KEY_ES) {\r\n            if (this.completer.isOpen) {\r\n                this.restoreSearchValue();\r\n                this.completer.clear();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener(\"paste\", [\"$event\"])\r\n    public pasteHandler(event: any) {\r\n        this.completer.open();\r\n    }\r\n\r\n    @HostListener(\"keydown\", [\"$event\"])\r\n    public keydownHandler(event: any) {\r\n        const keyCode = event.keyCode || event.which;\r\n        if (keyCode === KEY_EN) {\r\n            if (this.completer.hasHighlighted()) {\r\n                event.preventDefault();\r\n            }\r\n            this.handleSelection();\r\n        } else if (keyCode === KEY_DW) {\r\n            event.preventDefault();\r\n            this.completer.open();\r\n            this.completer.nextRow();\r\n        } else if (keyCode === KEY_UP) {\r\n            event.preventDefault();\r\n            this.completer.prevRow();\r\n        } else if (keyCode === KEY_TAB) {\r\n            this.handleSelection();\r\n        } else if (keyCode === KEY_BK) {\r\n            this.completer.open();\r\n        } else if (keyCode === KEY_ES) {\r\n            // This is very specific to IE10/11 #272\r\n            // without this, IE clears the input text\r\n            event.preventDefault();\r\n            if (this.completer.isOpen) {\r\n                event.stopPropagation();\r\n            }\r\n        } else {\r\n            if (keyCode !== 0 && keyCode !== KEY_SH && keyCode !== KEY_CL &&\r\n                (keyCode <= KEY_F1 || keyCode >= KEY_F12) &&\r\n                !event.ctrlKey && !event.metaKey && !event.altKey\r\n            ) {\r\n                this.completer.open();\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener(\"blur\", [\"$event\"])\r\n    public onBlur(event: any) {\r\n        // Check if we need to cancel Blur for IE\r\n        if (this.completer.isCancelBlur()) {\r\n            setTimeout(\r\n                () => {\r\n                    // get the focus back\r\n                    this.el.nativeElement.focus();\r\n                },\r\n                0\r\n            );\r\n            return;\r\n        }\r\n\r\n        if (this.completer.isOpen) {\r\n            this.blurTimer = timer(200).pipe(take(1)).subscribe(() => this.doBlur());\r\n        }\r\n    }\r\n\r\n    @HostListener(\"focus\", [])\r\n    public onfocus() {\r\n        if (this.blurTimer) {\r\n            this.blurTimer.unsubscribe();\r\n            this.blurTimer = null;\r\n        }\r\n\r\n        if (this.selectOnFocus) {\r\n            this.el.nativeElement.select();\r\n        }\r\n\r\n        if (this.openOnFocus) {\r\n            this.completer.open();\r\n        }\r\n    }\r\n\r\n    @HostListener(\"click\", [\"$event\"])\r\n    public onClick(event: any) {\r\n        if (this.selectOnClick) {\r\n            this.el.nativeElement.select();\r\n        }\r\n\r\n        if (this.openOnClick) {\r\n            if (this.completer.isOpen) {\r\n                this.completer.clear();\r\n            } else {\r\n                this.completer.open();\r\n            }\r\n        }\r\n    }\r\n\r\n    public get searchStr() {\r\n        return this._searchStr;\r\n    }\r\n\r\n    public set searchStr(term: string) {\r\n        this._searchStr = term;\r\n        this._displayStr = term;\r\n    }\r\n\r\n    private handleSelection() {\r\n        if (this.completer.hasHighlighted()) {\r\n            this._searchStr = \"\";\r\n            this.completer.selectCurrent();\r\n        } else if (this.overrideSuggested) {\r\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\r\n        } else {\r\n            if (this.clearUnselected && !this.completer.hasSelected) {\r\n                this.searchStr = \"\";\r\n                this.ngModelChange.emit(this.searchStr);\r\n            }\r\n            this.completer.clear();\r\n        }\r\n    }\r\n\r\n    private restoreSearchValue() {\r\n        if (this.fillHighlighted) {\r\n            if (this._displayStr !== this.searchStr) {\r\n                this._displayStr = this.searchStr;\r\n                this.ngModelChange.emit(this.searchStr);\r\n            }\r\n        }\r\n    }\r\n\r\n    private doBlur() {\r\n        if (this.blurTimer) {\r\n            this.blurTimer.unsubscribe();\r\n            this.blurTimer = null;\r\n        }\r\n\r\n        if (this.overrideSuggested) {\r\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\r\n        } else {\r\n            if (this.clearUnselected && !this.completer.hasSelected) {\r\n                this.searchStr = \"\";\r\n                this.ngModelChange.emit(this.searchStr);\r\n            } else {\r\n                this.restoreSearchValue();\r\n            }\r\n        }\r\n\r\n        this.completer.clear();\r\n    }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Host,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  NgZone,\r\n} from \"@angular/core\";\r\nimport { Subscription, timer } from \"rxjs\";\r\nimport { take } from \"rxjs/operators\";\r\nimport { CompleterItem } from \"../components/completer-item\";\r\nimport { CLEAR_TIMEOUT, isNil, MIN_SEARCH_LENGTH, PAUSE } from \"../globals\";\r\nimport { CompleterData } from \"../services/completer-data\";\r\nimport { CompleterList, CtrCompleter } from \"./ctr-completer\";\r\n\r\nexport class CtrListContext {\r\n  constructor(\r\n    public results: CompleterItem[] | null,\r\n    public searching: boolean,\r\n    public searchInitialized: boolean,\r\n    public isOpen: boolean\r\n  ) {}\r\n}\r\n\r\n@Directive({\r\n  selector: \"[ctrList]\",\r\n})\r\nexport class CtrList implements OnInit, CompleterList {\r\n  @Input() public ctrListMinSearchLength = MIN_SEARCH_LENGTH;\r\n  @Input() public ctrListPause = PAUSE;\r\n  @Input() public ctrListAutoMatch = false;\r\n  @Input() public ctrListAutoHighlight = false;\r\n  @Input() public ctrListDisplaySearching = true;\r\n\r\n  private _dataService: CompleterData | null = null;\r\n  // private results: CompleterItem[] = [];\r\n  private term: string | null = null;\r\n  // private searching = false;\r\n  private searchTimer: Subscription | null = null;\r\n  private clearTimer: Subscription | null = null;\r\n  private ctx = new CtrListContext([], false, false, false);\r\n  private _initialValue: any = null;\r\n  private viewRef: EmbeddedViewRef<CtrListContext> | null = null;\r\n\r\n  constructor(\r\n    @Host() private completer: CtrCompleter,\r\n    private templateRef: TemplateRef<CtrListContext>,\r\n    private viewContainer: ViewContainerRef,\r\n    private cd: ChangeDetectorRef,\r\n    private zone: NgZone\r\n  ) {}\r\n\r\n  public ngOnInit() {\r\n    this.completer.registerList(this);\r\n    this.viewRef = this.viewContainer.createEmbeddedView(\r\n      this.templateRef,\r\n      new CtrListContext([], false, false, false)\r\n    );\r\n  }\r\n\r\n  @Input(\"ctrList\")\r\n  public set dataService(newService: CompleterData) {\r\n    this._dataService = newService;\r\n    this.dataServiceSubscribe();\r\n  }\r\n\r\n  @Input(\"ctrListInitialValue\")\r\n  public set initialValue(value: any) {\r\n    if (\r\n      this._dataService &&\r\n      typeof this._dataService.convertToItem === \"function\"\r\n    ) {\r\n      this.zone.run(() => {\r\n        const initialItem =\r\n          this._dataService && this._dataService.convertToItem!(value);\r\n        if (initialItem) {\r\n          this.completer.onSelected(initialItem, false);\r\n        }\r\n      });\r\n    } else if (!this._dataService) {\r\n      this._initialValue = value;\r\n    }\r\n  }\r\n\r\n  public search(term: string) {\r\n    if (\r\n      !isNil(term) &&\r\n      term.length >= this.ctrListMinSearchLength &&\r\n      this.term !== term\r\n    ) {\r\n      if (this.searchTimer) {\r\n        this.searchTimer.unsubscribe();\r\n        this.searchTimer = null;\r\n      }\r\n      if (!this.ctx.searching) {\r\n        if (this.ctrListDisplaySearching) {\r\n          this.ctx.results = [];\r\n        }\r\n        this.ctx.searching = true;\r\n        this.ctx.searchInitialized = true;\r\n        this.refreshTemplate();\r\n      }\r\n      if (this.clearTimer) {\r\n        this.clearTimer.unsubscribe();\r\n      }\r\n      this.searchTimer = timer(this.ctrListPause)\r\n        .pipe(take(1))\r\n        .subscribe(() => {\r\n          this.searchTimerComplete(term);\r\n        });\r\n    } else if (!isNil(term) && term.length < this.ctrListMinSearchLength) {\r\n      this.clear();\r\n      this.term = \"\";\r\n    }\r\n  }\r\n\r\n  public clear() {\r\n    if (this.searchTimer) {\r\n      this.searchTimer.unsubscribe();\r\n    }\r\n    this.clearTimer = timer(CLEAR_TIMEOUT)\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        this._clear();\r\n      });\r\n  }\r\n\r\n  public open() {\r\n    if (!this.ctx.searchInitialized) {\r\n      this.search(\"\");\r\n    }\r\n    this.refreshTemplate();\r\n  }\r\n\r\n  public isOpen(open: boolean) {\r\n    this.ctx.isOpen = open;\r\n  }\r\n\r\n  private _clear() {\r\n    if (this.searchTimer) {\r\n      this.searchTimer.unsubscribe();\r\n      this.searchTimer = null;\r\n    }\r\n    if (this.dataService) {\r\n      this.dataService.cancel();\r\n    }\r\n\r\n    this.viewContainer.clear();\r\n    this.viewRef = null;\r\n  }\r\n\r\n  private searchTimerComplete(term: string) {\r\n    // Begin the search\r\n    if (isNil(term) || term.length < this.ctrListMinSearchLength) {\r\n      this.ctx.searching = false;\r\n      return;\r\n    }\r\n    this.term = term;\r\n\r\n    if (this._dataService) {\r\n      this._dataService.search(term);\r\n    }\r\n  }\r\n\r\n  private refreshTemplate() {\r\n    // create the template if it doesn't exist\r\n    if (!this.viewRef) {\r\n      this.viewRef = this.viewContainer.createEmbeddedView(\r\n        this.templateRef,\r\n        this.ctx\r\n      );\r\n    } else if (!this.viewRef.destroyed) {\r\n      // refresh the template\r\n      this.viewRef!.context.isOpen = this.ctx.isOpen;\r\n      this.viewRef!.context.results = this.ctx.results;\r\n      this.viewRef!.context.searching = this.ctx.searching;\r\n      this.viewRef!.context.searchInitialized = this.ctx.searchInitialized;\r\n      this.viewRef.detectChanges();\r\n    }\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  private getBestMatchIndex() {\r\n    if (!this.ctx.results || !this.term) {\r\n      return null;\r\n    }\r\n\r\n    // First try to find the exact term\r\n    let bestMatch = this.ctx.results.findIndex(\r\n      (item) => item.title.toLowerCase() === this.term!.toLocaleLowerCase()\r\n    );\r\n    // If not try to find the first item that starts with the term\r\n    if (bestMatch < 0) {\r\n      bestMatch = this.ctx.results.findIndex((item) =>\r\n        item.title.toLowerCase().startsWith(this.term!.toLocaleLowerCase())\r\n      );\r\n    }\r\n    // If not try to find the first item that includes the term\r\n    if (bestMatch < 0) {\r\n      bestMatch = this.ctx.results.findIndex((item) =>\r\n        item.title.toLowerCase().includes(this.term!.toLocaleLowerCase())\r\n      );\r\n    }\r\n\r\n    return bestMatch < 0 ? null : bestMatch;\r\n  }\r\n\r\n  private dataServiceSubscribe() {\r\n    if (this._dataService) {\r\n      this._dataService.subscribe(\r\n        (results) => {\r\n          this.ctx.searchInitialized = true;\r\n          this.ctx.searching = false;\r\n          this.ctx.results = results;\r\n\r\n          if (\r\n            this.ctrListAutoMatch &&\r\n            results &&\r\n            results.length === 1 &&\r\n            results[0].title &&\r\n            !isNil(this.term) &&\r\n            results[0].title.toLocaleLowerCase() ===\r\n              this.term!.toLocaleLowerCase()\r\n          ) {\r\n            // Do automatch\r\n            this.completer.onSelected(results[0]);\r\n            return;\r\n          }\r\n\r\n          this.refreshTemplate();\r\n\r\n          if (this.ctrListAutoHighlight) {\r\n            this.completer.autoHighlightIndex = this.getBestMatchIndex();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          // tslint:disable-next-line:no-console\r\n          console.error(error);\r\n          // tslint:disable-next-line:no-console\r\n          console.error(\r\n            \"Unexpected error in dataService: errors should be handled by the dataService Observable\"\r\n          );\r\n          return [];\r\n        }\r\n      );\r\n\r\n      if (this._dataService.dataSourceChange) {\r\n        this._dataService.dataSourceChange.subscribe(() => {\r\n          this.term = null;\r\n          this.ctx.searchInitialized = false;\r\n          this.ctx.searching = false;\r\n          this.ctx.results = [];\r\n          this.refreshTemplate();\r\n          this.completer.onDataSourceChange();\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Host, HostListener, Input, Renderer2, OnDestroy } from \"@angular/core\";\r\n\r\nimport { CompleterItem } from \"../components/completer-item\";\r\nimport { CtrDropdown, CtrRowElement, CtrRowItem } from \"./ctr-dropdown\";\r\n\r\n@Directive({\r\n    selector: \"[ctrRow]\",\r\n})\r\nexport class CtrRow implements CtrRowElement, OnDestroy {\r\n\r\n    private selected = false;\r\n    private _rowIndex: number = 0;\r\n    private _item: CompleterItem | null = null;\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer2, @Host() private dropdown: CtrDropdown) { }\r\n\r\n    public ngOnDestroy() {\r\n        if (this._rowIndex) {\r\n            this.dropdown.unregisterRow(this._rowIndex);\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    set ctrRow(index: number) {\r\n        this._rowIndex = index;\r\n        this.dropdown.registerRow(new CtrRowItem(this, this._rowIndex));\r\n    }\r\n\r\n    @Input()\r\n    set dataItem(item: CompleterItem) {\r\n        this._item = item;\r\n    }\r\n\r\n    @HostListener(\"click\", [\"$event\"]) public onClick(event: any) {\r\n        this.dropdown.onSelected(this._item);\r\n    }\r\n\r\n    @HostListener(\"mouseenter\", [\"$event\"]) public onMouseEnter(event: any) {\r\n        this.dropdown.highlightRow(this._rowIndex);\r\n    }\r\n\r\n    @HostListener(\"mousedown\", [\"$event\"]) public onMouseDown(event: any) {\r\n        this.dropdown.rowMouseDown();\r\n    }\r\n\r\n    public setHighlighted(selected: boolean) {\r\n        this.selected = selected;\r\n        if (this.selected) {\r\n          this.renderer.addClass(this.el.nativeElement, \"completer-selected-row\");\r\n        } else {\r\n          this.renderer.removeClass(this.el.nativeElement, \"completer-selected-row\");\r\n        }\r\n    }\r\n\r\n    public getNativeElement() {\r\n        return this.el.nativeElement;\r\n    }\r\n\r\n    public getDataItem() {\r\n        return this._item;\r\n    }\r\n}\r\n","\"use strict\";\r\nimport { Component, Input, OnInit } from \"@angular/core\";\r\n\r\nexport interface MatchPart {\r\n    isMatch: boolean;\r\n    text: string;\r\n}\r\n\r\n@Component({\r\n    selector: \"completer-list-item\",\r\n    template: `<span class=\"completer-list-item-holder\" [ngClass]= \"{'completer-title': type === 'title', 'completer-description': type === 'description'}\" >\r\n        <span class=\"completer-list-item\" *ngFor=\"let part of parts\" [ngClass]= \"part.isMatch ? matchClass : null\">{{part.text}}</span>\r\n    </span>`\r\n})\r\nexport class CompleterListItemCmp implements OnInit {\r\n    @Input()\r\n    public text: string = \"\";\r\n    @Input()\r\n    public searchStr: string = \"\";\r\n    @Input()\r\n    public matchClass: string = \"\";\r\n    @Input()\r\n    public type: string = \"\";\r\n\r\n    public parts: MatchPart[] = [];\r\n    public ngOnInit() {\r\n        if (!this.searchStr) {\r\n            this.parts.push({ isMatch: false, text: this.text });\r\n            return;\r\n        }\r\n        const matchStr = this.text.toLowerCase();\r\n        let matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\r\n        let startIndex = 0;\r\n        while (matchPos >= 0) {\r\n            const matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\r\n            if (matchPos === 0) {\r\n                this.parts.push({ isMatch: true, text: matchText });\r\n                startIndex += this.searchStr.length;\r\n            } else if (matchPos > 0) {\r\n                const matchPart = this.text.slice(startIndex, matchPos);\r\n                this.parts.push({ isMatch: false, text: matchPart });\r\n                this.parts.push({ isMatch: true, text: matchText });\r\n                startIndex += this.searchStr.length + matchPart.length;\r\n            }\r\n            matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\r\n        }\r\n        if (startIndex < this.text.length) {\r\n            this.parts.push({ isMatch: false, text: this.text.slice(startIndex, this.text.length) });\r\n        }\r\n    }\r\n}","\"use strict\";\r\nimport { AfterViewChecked, ChangeDetectorRef, Component, Input, Output, EventEmitter, OnInit, ViewChild, forwardRef, AfterViewInit, ElementRef } from \"@angular/core\";\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\n\r\nimport { CtrCompleter } from \"../directives/ctr-completer\";\r\nimport { CompleterData } from \"../services/completer-data\";\r\nimport { CompleterService } from \"../services/completer-service\";\r\nimport { CompleterItem } from \"./completer-item\";\r\nimport { MAX_CHARS, MIN_SEARCH_LENGTH, PAUSE, TEXT_SEARCHING, TEXT_NO_RESULTS, isNil } from \"../globals\";\r\n\r\n\r\nconst noop = () => {\r\n    return;\r\n};\r\n\r\nconst COMPLETER_CONTROL_VALUE_ACCESSOR = {\r\n    multi: true,\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CompleterCmp),\r\n};\r\n\r\n\r\n@Component({\r\n    selector: \"ng2-completer\",\r\n    template: `\r\n        <div class=\"completer-holder\" ctrCompleter>\r\n            <input #ctrInput [attr.id]=\"inputId.length > 0 ? inputId : null\" type=\"search\"\r\n                class=\"completer-input\" ctrInput [ngClass]=\"inputClass\"\r\n                [(ngModel)]=\"searchStr\" (ngModelChange)=\"onChange($event)\"\r\n                [attr.name]=\"inputName\" [placeholder]=\"placeholder\"\r\n                [attr.maxlength]=\"maxChars\" [tabindex]=\"fieldTabindex\" [disabled]=\"disableInput\"\r\n                [clearSelected]=\"clearSelected\" [clearUnselected]=\"clearUnselected\"\r\n                [overrideSuggested]=\"overrideSuggested\" [openOnFocus]=\"openOnFocus\" [fillHighlighted]=\"fillHighlighted\"\r\n                [openOnClick]=\"openOnClick\" [selectOnClick]=\"selectOnClick\" [selectOnFocus]=\"selectOnFocus\"\r\n                (blur)=\"onBlur()\" (focus)=\"onFocus()\" (keyup)=\"onKeyup($event)\"\r\n                (keydown)=\"onKeydown($event)\" (click)=\"onClick($event)\"\r\n                autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" />\r\n\r\n            <div class=\"completer-dropdown-holder\"\r\n                *ctrList=\"dataService;\r\n                    minSearchLength: minSearchLength;\r\n                    pause: pause;\r\n                    autoMatch: autoMatch;\r\n                    initialValue: initialValue;\r\n                    autoHighlight: autoHighlight;\r\n                    displaySearching: displaySearching;\r\n                    let items = results;\r\n                    let searchActive = searching;\r\n                    let isInitialized = searchInitialized;\r\n                    let isOpen = isOpen;\">\r\n                <div class=\"completer-dropdown\" ctrDropdown\r\n                    *ngIf=\"isInitialized && isOpen && (( items?.length > 0|| (displayNoResults && !searchActive)) || (searchActive && displaySearching))\">\r\n                    <div *ngIf=\"searchActive && displaySearching\" class=\"completer-searching\">{{ _textSearching }}</div>\r\n                    <div *ngIf=\"!searchActive && (!items || items?.length === 0)\"\r\n                    class=\"completer-no-results\">{{ _textNoResults }}</div>\r\n                    <div class=\"completer-row-wrapper\" *ngFor=\"let item of items; let rowIndex=index\">\r\n                        <div class=\"completer-row\" [ctrRow]=\"rowIndex\" [dataItem]=\"item\">\r\n                            <div *ngIf=\"item.image || item.image === ''\" class=\"completer-image-holder\">\r\n                                <img *ngIf=\"item.image != ''\" src=\"{{item.image}}\" class=\"completer-image\" />\r\n                                <div *ngIf=\"item.image === ''\" class=\"completer-image-default\"></div>\r\n                            </div>\r\n                            <div class=\"completer-item-text\"\r\n                            [ngClass]=\"{'completer-item-text-image': item.image || item.image === '' }\">\r\n                                <completer-list-item\r\n                                class=\"completer-title\" [text]=\"item.title\" [matchClass]=\"matchClass\"\r\n                                [searchStr]=\"searchStr\" [type]=\"'title'\"></completer-list-item>\r\n                                <completer-list-item *ngIf=\"item.description && item.description != ''\"\r\n                                class=\"completer-description\" [text]=\"item.description\"\r\n                                    [matchClass]=\"matchClass\" [searchStr]=\"searchStr\" [type]=\"'description'\">\r\n                                </completer-list-item>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n    .completer-dropdown {\r\n        border-color: #ececec;\r\n        border-width: 1px;\r\n        border-style: solid;\r\n        border-radius: 2px;\r\n        width: 250px;\r\n        padding: 6px;\r\n        cursor: pointer;\r\n        z-index: 9999;\r\n        position: absolute;\r\n        margin-top: -6px;\r\n        background-color: #ffffff;\r\n    }\r\n\r\n    .completer-row {\r\n        padding: 5px;\r\n        color: #000000;\r\n        margin-bottom: 4px;\r\n        clear: both;\r\n        display: inline-block;\r\n        width: 103%;\r\n    }\r\n\r\n    .completer-selected-row {\r\n        background-color: lightblue;\r\n        color: #ffffff;\r\n    }\r\n\r\n    .completer-description {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .completer-image-default {\r\n        width: 16px;\r\n        height: 16px;\r\n        background-image: url(\"demo/res/img/default.png\");\r\n    }\r\n\r\n    .completer-image-holder {\r\n        float: left;\r\n        width: 10%;\r\n    }\r\n    .completer-item-text-image {\r\n        float: right;\r\n        width: 90%;\r\n    }\r\n    `],\r\n    providers: [COMPLETER_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class CompleterCmp implements ControlValueAccessor, AfterViewChecked, AfterViewInit {\r\n    @Input() public dataService: CompleterData | undefined;\r\n    @Input() public inputName = \"\";\r\n    @Input() public inputId: string = \"\";\r\n    @Input() public pause = PAUSE;\r\n    @Input() public minSearchLength = MIN_SEARCH_LENGTH;\r\n    @Input() public maxChars = MAX_CHARS;\r\n    @Input() public overrideSuggested = false;\r\n    @Input() public clearSelected = false;\r\n    @Input() public clearUnselected = false;\r\n    @Input() public fillHighlighted = true;\r\n    @Input() public placeholder = \"\";\r\n    @Input() public matchClass: string | undefined;\r\n    @Input() public fieldTabindex: number | undefined;\r\n    @Input() public autoMatch = false;\r\n    @Input() public disableInput = false;\r\n    @Input() public inputClass: string | undefined;\r\n    @Input() public autofocus = false;\r\n    @Input() public openOnFocus = false;\r\n    @Input() public openOnClick = false;\r\n    @Input() public selectOnClick = false;\r\n    @Input() public selectOnFocus = false;\r\n    @Input() public initialValue: any;\r\n    @Input() public autoHighlight = false;\r\n\r\n    @Output() public selected = new EventEmitter<CompleterItem>();\r\n    @Output() public highlighted = new EventEmitter<CompleterItem>();\r\n    @Output(\"blur\") public blurEvent = new EventEmitter<void>();\r\n    @Output() public click = new EventEmitter<void>();\r\n    @Output(\"focus\") public focusEvent = new EventEmitter<void>();\r\n    @Output() public opened = new EventEmitter<boolean>();\r\n    @Output() public keyup: EventEmitter<any> = new EventEmitter();\r\n    @Output() public keydown: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild(CtrCompleter, { static: false }) public completer: CtrCompleter | undefined;\r\n    @ViewChild(\"ctrInput\", { static: false }) public ctrInput: ElementRef | undefined;\r\n\r\n    public control = new FormControl(\"\");\r\n    public displaySearching = true;\r\n    public displayNoResults = true;\r\n    public _textNoResults = TEXT_NO_RESULTS;\r\n    public _textSearching = TEXT_SEARCHING;\r\n\r\n    private _onTouchedCallback: () => void = noop;\r\n    private _onChangeCallback: (_: any) => void = noop;\r\n    private _focus: boolean = false;\r\n    private _open: boolean = false;\r\n    private _searchStr = \"\";\r\n\r\n    constructor(private completerService: CompleterService, private cdr: ChangeDetectorRef) { }\r\n\r\n    public get value(): any { return this.searchStr; };\r\n\r\n    public set value(v: any) {\r\n        if (v !== this.searchStr) {\r\n            this.searchStr = v;\r\n        }\r\n        // Propagate the change in any case\r\n        this._onChangeCallback(v);\r\n    }\r\n\r\n    public get searchStr() {\r\n        return this._searchStr;\r\n    }\r\n\r\n    public set searchStr(value: string) {\r\n        if (typeof value === \"string\" || isNil(value)) {\r\n            this._searchStr = value;\r\n        } else {\r\n            this._searchStr = JSON.stringify(value);\r\n        }\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        if (this.autofocus) {\r\n            this._focus = true;\r\n        }\r\n        \r\n        if (!this.completer) {\r\n            return;\r\n        }\r\n\r\n        this.completer.selected.subscribe((item: CompleterItem) => {\r\n            this.selected.emit(item);\r\n        });\r\n        this.completer.highlighted.subscribe((item: CompleterItem) => {\r\n            this.highlighted.emit(item);\r\n        });\r\n        this.completer.opened.subscribe((isOpen: boolean) => {\r\n            this._open = isOpen;\r\n            this.opened.emit(isOpen);\r\n        });\r\n    }\r\n\r\n    public ngAfterViewChecked(): void {\r\n        if (this._focus) {\r\n            setTimeout(\r\n                () => {\r\n                    if (!!this.ctrInput) {\r\n                        this.ctrInput.nativeElement.focus();\r\n                        this._focus = false;\r\n                    }\r\n                },\r\n                0\r\n            );\r\n        }\r\n    }\r\n\r\n    public onTouched() {\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    public writeValue(value: any) {\r\n        this.searchStr = value;\r\n    }\r\n\r\n    public registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n    public setDisabledState(isDisabled: boolean): void {\r\n        this.disableInput = isDisabled;\r\n    }\r\n\r\n    @Input()\r\n    public set datasource(source: CompleterData | string | any[]) {\r\n        if (source) {\r\n            if (source instanceof Array) {\r\n                this.dataService = this.completerService.local(source);\r\n            } else if (typeof (source) === \"string\") {\r\n                this.dataService = this.completerService.remote(source);\r\n            } else {\r\n                this.dataService = source as CompleterData;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set textNoResults(text: string) {\r\n        if (this._textNoResults !== text) {\r\n            this._textNoResults = text;\r\n            this.displayNoResults = !!this._textNoResults && this._textNoResults !== \"false\";\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set textSearching(text: string) {\r\n        if (this._textSearching !== text) {\r\n            this._textSearching = text;\r\n            this.displaySearching = !!this._textSearching && this._textSearching !== \"false\";\r\n        }\r\n    }\r\n\r\n    public onBlur() {\r\n        this.blurEvent.emit();\r\n        this.onTouched();\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    public onFocus() {\r\n        this.focusEvent.emit();\r\n        this.onTouched();\r\n    }\r\n\r\n    public onClick(event: any) {\r\n        this.click.emit(event);\r\n        this.onTouched();\r\n    }\r\n\r\n    public onKeyup(event: any) {\r\n        this.keyup.emit(event);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    public onKeydown(event: any) {\r\n        this.keydown.emit(event);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    public onChange(value: string) {\r\n        this.value = value;\r\n    }\r\n\r\n    public open() {\r\n        if (!this.completer) {\r\n            return;\r\n        }\r\n\r\n        this.completer.open();\r\n    }\r\n\r\n    public close() {\r\n        if (!this.completer) {\r\n            return;\r\n        }\r\n\r\n        this.completer.clear();\r\n    }\r\n\r\n    public focus(): void {\r\n        if (this.ctrInput) {\r\n            this.ctrInput.nativeElement.focus();\r\n        } else {\r\n            this._focus = true;\r\n        }\r\n    }\r\n\r\n    public blur(): void {\r\n        if (this.ctrInput) {\r\n            this.ctrInput.nativeElement.blur();\r\n        } else {\r\n            this._focus = false;\r\n        }\r\n    }\r\n\r\n    public isOpen() {\r\n        return this._open;\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { CompleterCmp } from \"../components/completer-cmp\";\r\nimport { CompleterListItemCmp } from \"../components/completer-list-item-cmp\";\r\nimport { LocalDataFactory } from \"../services/local-data-factory\";\r\nimport { RemoteDataFactory } from \"../services/remote-data-factory\";\r\nimport { CompleterService } from \"../services/completer-service\";\r\n\r\nimport { CtrCompleter } from \"../directives/ctr-completer\";\r\nimport { CtrDropdown } from \"../directives/ctr-dropdown\";\r\nimport { CtrInput } from \"../directives/ctr-input\";\r\nimport { CtrList } from \"../directives/ctr-list\";\r\nimport { CtrRow } from \"../directives/ctr-row\";\r\n\r\nconst providers = [\r\n    CompleterService,\r\n    LocalDataFactory,\r\n    RemoteDataFactory\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CompleterListItemCmp,\r\n        CtrCompleter,\r\n        CtrDropdown,\r\n        CtrInput,\r\n        CtrList,\r\n        CtrRow,\r\n        CompleterCmp\r\n    ],\r\n    exports: [\r\n        CompleterListItemCmp,\r\n        CtrCompleter,\r\n        CtrDropdown,\r\n        CtrInput,\r\n        CtrList,\r\n        CtrRow,\r\n        CompleterCmp\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    providers\r\n})\r\nexport class Ng2CompleterModule {\r\n\r\n    public static forRoot(): ModuleWithProviders<any> {\r\n        return {\r\n            ngModule: Ng2CompleterModule,\r\n            providers\r\n        };\r\n    }\r\n\r\n    public static forChild(): ModuleWithProviders<any> {\r\n        return {\r\n            ngModule: Ng2CompleterModule,\r\n            providers\r\n        };\r\n    }\r\n}\r\n"],"names":["extendStatics","__extends","tslib_1.__extends","EventEmitter","catchError","map","Injectable","HttpClient","Directive","Output","Host","ElementRef","NgZone","HostListener","take","NgModel","Input","TemplateRef","ViewContainerRef","ChangeDetectorRef","Renderer2","Component","NG_VALUE_ACCESSOR","forwardRef","FormControl","ViewChild","NgModule","CommonModule","FormsModule"],"mappings":"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"}